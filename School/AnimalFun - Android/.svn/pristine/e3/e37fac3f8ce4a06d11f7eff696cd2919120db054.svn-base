package com.example.animalfun;

import java.util.*;
import com.example.animalfun.AnimalSpelling.*;

public class SpellingResultsService {

	private Queue<SpellingResult> results; // Queue of results

	// Private constructor to enforce use of the static Instance property
	private SpellingResultsService() {
	}

	// Holds the instance of this singleton
	static private SpellingResultsService instance;

	// Creates the instance of this singleton if instance is null,
	// and returns the instance of this object
	static public SpellingResultsService Instance() {
		if (instance == null)
			instance = new SpellingResultsService();
		return instance;
	}

	// Returns the number of results stored
	public int Count() {
		return results.size();
	}

	// Returns whether the queue has more results
	public boolean HasMoreResults() {
		return results.size() > 0;
	}

	// Adds the result to the results queue
	public void AddResult(SpellingResult result) {
		if (result != null)
			results.add(result);
	}

	// Constructs a new result from an animal and user input string and adds it
	// to the results queue
	public void AddResult(Animal animal, VerifiedLetterCollection verifiedInput) {
		if (animal != null && verifiedInput != null)
			results.add(new SpellingResult(animal, verifiedInput));
	}

	// Returns the number of correct results
	public int NumCorrect() {
		int numCorrect = 0;

		for (int i = 0; i < results.size(); i++) {
			if (results.peek().isCorrect)
				numCorrect++;
			results.add(results.remove());
		}

		return numCorrect;
	}

	// Returns the next result on the results queue
	public SpellingResult NextResult() {
		return results.remove();
	}

	// Empties the results list
	public void Clear() {
		results.clear();
	}
}
